{"ast":null,"code":"var _jsxFileName = \"/home/swimmingkiim/Documents/Code-For-Korea/online-memorial/client/src/components/common/TextChunk/index.tsx\";\nimport React from \"react\";\nimport styles from \"./style.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TextChunk = _ref => {\n  let {\n    isParagraph = false,\n    content,\n    charLimit = null,\n    style\n  } = _ref;\n  const textContent = charLimit ? `${content.slice(0, charLimit)}...` : content;\n\n  if (isParagraph) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: `${styles.text} ${style !== null && style !== void 0 ? style : \"\"}`,\n      children: textContent.split(\"\\n\").map((line, idx) => {\n        return /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: [line, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 33\n          }, this)]\n        }, `${line.slice(5)}-${idx}`, true, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 29\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    className: `${styles.text} ${style !== null && style !== void 0 ? style : \"\"}`,\n    children: textContent.split(\"\\n\").map((line, idx) => {\n      return /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [line, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 29\n        }, this)]\n      }, `${line.slice(5)}-${idx}`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 25\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n\n_c = TextChunk;\nexport default TextChunk;\n\nvar _c;\n\n$RefreshReg$(_c, \"TextChunk\");","map":{"version":3,"names":["React","styles","TextChunk","isParagraph","content","charLimit","style","textContent","slice","text","split","map","line","idx"],"sources":["/home/swimmingkiim/Documents/Code-For-Korea/online-memorial/client/src/components/common/TextChunk/index.tsx"],"sourcesContent":["import React from \"react\";\nimport styles from \"./style.module.css\";\n\nexport type TextChunkProps = {\n    content: string;\n    isParagraph?: boolean;\n    charLimit?: number | null;\n    style?: string;\n}\n\nconst TextChunk:React.FC<TextChunkProps> = ({ isParagraph = false, content, charLimit = null, style }) => {\n\n    const textContent = charLimit ? `${content.slice(0, charLimit)}...` : content;\n\n\n    if (isParagraph) {\n        return (\n            <p className={`${styles.text} ${style??\"\"}`}>\n                {\n                    textContent.split(\"\\n\").map((line, idx) => {\n                        return (\n                            <React.Fragment key={`${line.slice(5)}-${idx}`}>\n                                {\n                                    line\n                                }\n                                <br/>\n                            </React.Fragment>\n                        )\n                    })\n                }\n            </p>\n        )\n    }\n\n    return (\n        <span className={`${styles.text} ${style??\"\"}`}>\n            {\n                textContent.split(\"\\n\").map((line, idx) => {\n                    return (\n                        <React.Fragment key={`${line.slice(5)}-${idx}`}>\n                            {\n                                line\n                            }\n                            <br/>\n                        </React.Fragment>\n                    )\n                })\n            }\n        </span>\n    )\n};\n\nexport default TextChunk;"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,oBAAnB;;;AASA,MAAMC,SAAkC,GAAG,QAA+D;EAAA,IAA9D;IAAEC,WAAW,GAAG,KAAhB;IAAuBC,OAAvB;IAAgCC,SAAS,GAAG,IAA5C;IAAkDC;EAAlD,CAA8D;EAEtG,MAAMC,WAAW,GAAGF,SAAS,GAAI,GAAED,OAAO,CAACI,KAAR,CAAc,CAAd,EAAiBH,SAAjB,CAA4B,KAAlC,GAAyCD,OAAtE;;EAGA,IAAID,WAAJ,EAAiB;IACb,oBACI;MAAG,SAAS,EAAG,GAAEF,MAAM,CAACQ,IAAK,IAAGH,KAAlB,aAAkBA,KAAlB,cAAkBA,KAAlB,GAAyB,EAAG,EAA1C;MAAA,UAEQC,WAAW,CAACG,KAAZ,CAAkB,IAAlB,EAAwBC,GAAxB,CAA4B,CAACC,IAAD,EAAOC,GAAP,KAAe;QACvC,oBACI,QAAC,KAAD,CAAO,QAAP;UAAA,WAEQD,IAFR,eAII;YAAA;YAAA;YAAA;UAAA,QAJJ;QAAA,GAAsB,GAAEA,IAAI,CAACJ,KAAL,CAAW,CAAX,CAAc,IAAGK,GAAI,EAA7C;UAAA;UAAA;UAAA;QAAA,QADJ;MAQH,CATD;IAFR;MAAA;MAAA;MAAA;IAAA,QADJ;EAgBH;;EAED,oBACI;IAAM,SAAS,EAAG,GAAEZ,MAAM,CAACQ,IAAK,IAAGH,KAAlB,aAAkBA,KAAlB,cAAkBA,KAAlB,GAAyB,EAAG,EAA7C;IAAA,UAEQC,WAAW,CAACG,KAAZ,CAAkB,IAAlB,EAAwBC,GAAxB,CAA4B,CAACC,IAAD,EAAOC,GAAP,KAAe;MACvC,oBACI,QAAC,KAAD,CAAO,QAAP;QAAA,WAEQD,IAFR,eAII;UAAA;UAAA;UAAA;QAAA,QAJJ;MAAA,GAAsB,GAAEA,IAAI,CAACJ,KAAL,CAAW,CAAX,CAAc,IAAGK,GAAI,EAA7C;QAAA;QAAA;QAAA;MAAA,QADJ;IAQH,CATD;EAFR;IAAA;IAAA;IAAA;EAAA,QADJ;AAgBH,CAxCD;;KAAMX,S;AA0CN,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}