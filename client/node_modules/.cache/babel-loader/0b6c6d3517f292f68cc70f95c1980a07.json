{"ast":null,"code":"var _jsxFileName = \"/home/swimmingkiim/Documents/Code-For-Korea/online-memorial/client/src/views/MemorialMainContent/MemorialInfomations/MemorialStatistics/Cards/StatisticByDayCard/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useEffect, useMemo, useState } from \"react\";\nimport { Bar } from \"react-chartjs-2\";\nimport FlexRow from \"../../../../../../components/common/FlexRow\";\nimport BasicCard from \"../BasicCard\";\nimport styles from \"./style.module.css\";\nimport DataService from \"../../../../../../services/data.service\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst StatisticByDayCard = () => {\n  _s();\n\n  const [statisticByDay, setStatisticByDay] = useState([]);\n  const initializeStatisticByDay = useCallback(async () => {\n    const data = await DataService.getStatistic(new Date(Date.now()).getFullYear());\n\n    if (data !== null) {\n      setStatisticByDay(data);\n    }\n  }, []);\n  const title = \"요일별 비율 (%)\";\n  const subtitle = \"전체 산업재해 사망사고\";\n  const data = useMemo(() => {\n    const _data = {\n      labels: [\"월\", \"화\", \"수\", \"목\", \"금\", \"토\", \"일\"],\n      datasets: [{\n        label: title,\n        data: statisticByDay,\n        backgroundColor: \"rgba(255, 255, 255, 0.2)\",\n        borderWidth: 0,\n        borderRadius: 5\n      }]\n    };\n    return _data;\n  }, [statisticByDay]);\n  const options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n      legend: {\n        display: false\n      },\n      tooltip: {\n        enabled: true,\n        mode: \"nearest\"\n      }\n    },\n    scales: {\n      x: {\n        display: true,\n        ticks: {\n          color: \"#ffffff\"\n        }\n      },\n      y: {\n        display: false\n      }\n    }\n  };\n  useEffect(() => {\n    initializeStatisticByDay();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(BasicCard, {\n    title: title,\n    subtitle: subtitle,\n    children: /*#__PURE__*/_jsxDEV(FlexRow, {\n      style: styles[\"statistic-by-day--container__wrapper\"],\n      children: /*#__PURE__*/_jsxDEV(Bar, {\n        data: data,\n        options: options\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n};\n\n_s(StatisticByDayCard, \"1c++DEVyg6z1jfpwPQDdTYggWgk=\");\n\n_c = StatisticByDayCard;\nexport default StatisticByDayCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"StatisticByDayCard\");","map":{"version":3,"names":["React","useCallback","useEffect","useMemo","useState","Bar","FlexRow","BasicCard","styles","DataService","StatisticByDayCard","statisticByDay","setStatisticByDay","initializeStatisticByDay","data","getStatistic","Date","now","getFullYear","title","subtitle","_data","labels","datasets","label","backgroundColor","borderWidth","borderRadius","options","responsive","maintainAspectRatio","plugins","legend","display","tooltip","enabled","mode","scales","x","ticks","color","y"],"sources":["/home/swimmingkiim/Documents/Code-For-Korea/online-memorial/client/src/views/MemorialMainContent/MemorialInfomations/MemorialStatistics/Cards/StatisticByDayCard/index.tsx"],"sourcesContent":["import { ChartData, ChartOptions } from \"chart.js\";\nimport React, {useCallback, useEffect, useMemo, useState} from \"react\";\nimport { Bar } from \"react-chartjs-2\";\nimport FlexRow from \"../../../../../../components/common/FlexRow\";\nimport BasicCard from \"../BasicCard\";\nimport styles from \"./style.module.css\";\nimport DataService from \"../../../../../../services/data.service\";\n\ntype StatisticByDayCardProps = {}\n\nexport type StatisticDataByDay = number[];\n\nconst StatisticByDayCard:React.FC<StatisticByDayCardProps> = () => {\n\n    const [statisticByDay, setStatisticByDay] = useState<StatisticDataByDay>([]);\n\n    const initializeStatisticByDay = useCallback(async () => {\n        const data = await DataService.getStatistic(new Date(Date.now()).getFullYear());\n        if (data !== null) {\n            setStatisticByDay(data);\n        }\n    }, []);\n\n    const title = \"요일별 비율 (%)\"\n    const subtitle = \"전체 산업재해 사망사고\"\n    const data = useMemo(() => {\n        const _data: ChartData<\"bar\"> = {\n            labels: [\"월\", \"화\", \"수\", \"목\", \"금\", \"토\", \"일\"],\n            datasets: [\n                {\n                    label: title,\n                    data: statisticByDay,\n                    backgroundColor: \"rgba(255, 255, 255, 0.2)\",\n                    borderWidth: 0,\n                    borderRadius: 5\n                }\n            ]\n        }\n        return _data;\n    }, [statisticByDay]);\n    const options: ChartOptions<\"bar\"> = {\n        responsive: true,\n        maintainAspectRatio: false,\n        plugins: {\n            legend: {\n                display: false\n            },\n            tooltip: {\n                enabled: true,\n                mode: \"nearest\"\n            }\n        },\n        scales: {\n            x: {\n                display: true,\n                ticks: {\n                    color: \"#ffffff\"\n                }\n            },\n            y: {\n                display: false,\n            }\n        }\n    }\n\n    useEffect(() => {\n        initializeStatisticByDay();\n    }, [])\n\n    return (\n        <BasicCard title={title} subtitle={subtitle}>\n            <FlexRow style={styles[\"statistic-by-day--container__wrapper\"]}>\n                <Bar data={data} options={options}/>\n            </FlexRow>\n        </BasicCard>\n    )\n};\n\nexport default StatisticByDayCard;"],"mappings":";;;AACA,OAAOA,KAAP,IAAeC,WAAf,EAA4BC,SAA5B,EAAuCC,OAAvC,EAAgDC,QAAhD,QAA+D,OAA/D;AACA,SAASC,GAAT,QAAoB,iBAApB;AACA,OAAOC,OAAP,MAAoB,6CAApB;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,OAAOC,WAAP,MAAwB,yCAAxB;;;AAMA,MAAMC,kBAAoD,GAAG,MAAM;EAAA;;EAE/D,MAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCR,QAAQ,CAAqB,EAArB,CAApD;EAEA,MAAMS,wBAAwB,GAAGZ,WAAW,CAAC,YAAY;IACrD,MAAMa,IAAI,GAAG,MAAML,WAAW,CAACM,YAAZ,CAAyB,IAAIC,IAAJ,CAASA,IAAI,CAACC,GAAL,EAAT,EAAqBC,WAArB,EAAzB,CAAnB;;IACA,IAAIJ,IAAI,KAAK,IAAb,EAAmB;MACfF,iBAAiB,CAACE,IAAD,CAAjB;IACH;EACJ,CAL2C,EAKzC,EALyC,CAA5C;EAOA,MAAMK,KAAK,GAAG,YAAd;EACA,MAAMC,QAAQ,GAAG,cAAjB;EACA,MAAMN,IAAI,GAAGX,OAAO,CAAC,MAAM;IACvB,MAAMkB,KAAuB,GAAG;MAC5BC,MAAM,EAAE,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B,EAA+B,GAA/B,CADoB;MAE5BC,QAAQ,EAAE,CACN;QACIC,KAAK,EAAEL,KADX;QAEIL,IAAI,EAAEH,cAFV;QAGIc,eAAe,EAAE,0BAHrB;QAIIC,WAAW,EAAE,CAJjB;QAKIC,YAAY,EAAE;MALlB,CADM;IAFkB,CAAhC;IAYA,OAAON,KAAP;EACH,CAdmB,EAcjB,CAACV,cAAD,CAdiB,CAApB;EAeA,MAAMiB,OAA4B,GAAG;IACjCC,UAAU,EAAE,IADqB;IAEjCC,mBAAmB,EAAE,KAFY;IAGjCC,OAAO,EAAE;MACLC,MAAM,EAAE;QACJC,OAAO,EAAE;MADL,CADH;MAILC,OAAO,EAAE;QACLC,OAAO,EAAE,IADJ;QAELC,IAAI,EAAE;MAFD;IAJJ,CAHwB;IAYjCC,MAAM,EAAE;MACJC,CAAC,EAAE;QACCL,OAAO,EAAE,IADV;QAECM,KAAK,EAAE;UACHC,KAAK,EAAE;QADJ;MAFR,CADC;MAOJC,CAAC,EAAE;QACCR,OAAO,EAAE;MADV;IAPC;EAZyB,CAArC;EAyBA/B,SAAS,CAAC,MAAM;IACZW,wBAAwB;EAC3B,CAFQ,EAEN,EAFM,CAAT;EAIA,oBACI,QAAC,SAAD;IAAW,KAAK,EAAEM,KAAlB;IAAyB,QAAQ,EAAEC,QAAnC;IAAA,uBACI,QAAC,OAAD;MAAS,KAAK,EAAEZ,MAAM,CAAC,sCAAD,CAAtB;MAAA,uBACI,QAAC,GAAD;QAAK,IAAI,EAAEM,IAAX;QAAiB,OAAO,EAAEc;MAA1B;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADJ;AAOH,CAhED;;GAAMlB,kB;;KAAAA,kB;AAkEN,eAAeA,kBAAf"},"metadata":{},"sourceType":"module"}