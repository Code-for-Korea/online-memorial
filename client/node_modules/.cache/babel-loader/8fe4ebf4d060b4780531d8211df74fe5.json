{"ast":null,"code":"var _jsxFileName = \"/home/swimmingkiim/Documents/Code-For-Korea/online-memorial/client/src/components/post/PostList/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport FlexColumn from \"../../common/FlexColumn\";\nimport PostPaper from \"../PostPaper\";\nimport PostText from \"../PostText\";\nimport styles from \"./style.module.css\";\nimport PostService from \"../../../services/post.service\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PostList = _ref => {\n  _s();\n\n  let {\n    pageNum\n  } = _ref;\n  const [postList, setPostList] = useState([]);\n  const initializePostList = useCallback(async () => {\n    const currentDate = new Date(Date.now());\n    const data = await PostService.getPost(pageNum, 10);\n\n    if (data !== null) {\n      setPostList(data[\"posts\"].map(post => ({\n        id: post[\"id\"],\n        body: post[\"body\"],\n        name: post[\"name\"],\n        createdAt: Date.parse(post[\"created_at\"]),\n        updatedAt: Date.parse(post[\"updated_at\"])\n      })));\n    }\n  }, [pageNum]);\n  useEffect(() => {\n    initializePostList();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(FlexColumn, {\n    style: styles[\"post--list__wrapper\"],\n    children: postList.map(postData => {\n      return /*#__PURE__*/_jsxDEV(PostPaper, {\n        children: /*#__PURE__*/_jsxDEV(PostText, {\n          content: postData.body\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 29\n        }, this)\n      }, `postData-${postData.id}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 25\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PostList, \"TTwMO+iTB9PL1LETAI5eIeZOf60=\");\n\n_c = PostList;\nexport default PostList;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostList\");","map":{"version":3,"names":["React","useCallback","useEffect","useState","FlexColumn","PostPaper","PostText","styles","PostService","PostList","pageNum","postList","setPostList","initializePostList","currentDate","Date","now","data","getPost","map","post","id","body","name","createdAt","parse","updatedAt","postData"],"sources":["/home/swimmingkiim/Documents/Code-For-Korea/online-memorial/client/src/components/post/PostList/index.tsx"],"sourcesContent":["import React, { useCallback, useEffect, useState } from \"react\";\nimport FlexColumn from \"../../common/FlexColumn\";\nimport PostPaper from \"../PostPaper\";\nimport PostText from \"../PostText\";\nimport styles from \"./style.module.css\";\nimport PostService from \"../../../services/post.service\";\n\nexport type PostData = {\n    id: number;\n    body: string;\n    name: string;\n    createdAt: Date;\n    updatedAt: Date;\n}\n\nexport type PostDataList = PostData[];\n\nexport type PostListProps = {\n    pageNum: number;\n}\n\nconst PostList: React.FC<PostListProps> = ({ pageNum }) => {\n\n    const [postList, setPostList] = useState<PostDataList>([]);\n\n    const initializePostList = useCallback(async () => {\n        const currentDate = new Date(Date.now());\n        const data = await PostService.getPost(pageNum, 10);\n        if (data !== null) {\n            setPostList(data[\"posts\"].map((post: { [key: string]: string }) => ({\n                id: post[\"id\"],\n                body: post[\"body\"],\n                name: post[\"name\"],\n                createdAt: Date.parse(post[\"created_at\"]),\n                updatedAt: Date.parse(post[\"updated_at\"]),\n            })));\n        }\n    }, [pageNum]);\n\n    useEffect(() => {\n        initializePostList();\n    }, []);\n\n    return (\n        <FlexColumn style={styles[\"post--list__wrapper\"]}>\n            {\n                postList.map((postData) => {\n                    return (\n                        <PostPaper key={`postData-${postData.id}`}>\n                            <PostText content={postData.body} />\n                        </PostPaper>\n                    )\n                })\n            }\n        </FlexColumn>\n    )\n};\n\nexport default PostList;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,SAA7B,EAAwCC,QAAxC,QAAwD,OAAxD;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,OAAOC,WAAP,MAAwB,gCAAxB;;;AAgBA,MAAMC,QAAiC,GAAG,QAAiB;EAAA;;EAAA,IAAhB;IAAEC;EAAF,CAAgB;EAEvD,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAe,EAAf,CAAxC;EAEA,MAAMU,kBAAkB,GAAGZ,WAAW,CAAC,YAAY;IAC/C,MAAMa,WAAW,GAAG,IAAIC,IAAJ,CAASA,IAAI,CAACC,GAAL,EAAT,CAApB;IACA,MAAMC,IAAI,GAAG,MAAMT,WAAW,CAACU,OAAZ,CAAoBR,OAApB,EAA6B,EAA7B,CAAnB;;IACA,IAAIO,IAAI,KAAK,IAAb,EAAmB;MACfL,WAAW,CAACK,IAAI,CAAC,OAAD,CAAJ,CAAcE,GAAd,CAAmBC,IAAD,KAAsC;QAChEC,EAAE,EAAED,IAAI,CAAC,IAAD,CADwD;QAEhEE,IAAI,EAAEF,IAAI,CAAC,MAAD,CAFsD;QAGhEG,IAAI,EAAEH,IAAI,CAAC,MAAD,CAHsD;QAIhEI,SAAS,EAAET,IAAI,CAACU,KAAL,CAAWL,IAAI,CAAC,YAAD,CAAf,CAJqD;QAKhEM,SAAS,EAAEX,IAAI,CAACU,KAAL,CAAWL,IAAI,CAAC,YAAD,CAAf;MALqD,CAAtC,CAAlB,CAAD,CAAX;IAOH;EACJ,CAZqC,EAYnC,CAACV,OAAD,CAZmC,CAAtC;EAcAR,SAAS,CAAC,MAAM;IACZW,kBAAkB;EACrB,CAFQ,EAEN,EAFM,CAAT;EAIA,oBACI,QAAC,UAAD;IAAY,KAAK,EAAEN,MAAM,CAAC,qBAAD,CAAzB;IAAA,UAEQI,QAAQ,CAACQ,GAAT,CAAcQ,QAAD,IAAc;MACvB,oBACI,QAAC,SAAD;QAAA,uBACI,QAAC,QAAD;UAAU,OAAO,EAAEA,QAAQ,CAACL;QAA5B;UAAA;UAAA;UAAA;QAAA;MADJ,GAAiB,YAAWK,QAAQ,CAACN,EAAG,EAAxC;QAAA;QAAA;QAAA;MAAA,QADJ;IAKH,CAND;EAFR;IAAA;IAAA;IAAA;EAAA,QADJ;AAaH,CAnCD;;GAAMZ,Q;;KAAAA,Q;AAqCN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}