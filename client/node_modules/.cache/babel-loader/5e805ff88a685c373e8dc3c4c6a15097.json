{"ast":null,"code":"var _jsxFileName = \"/home/swimmingkiim/Documents/Code-For-Korea/online-memorial/client/src/components/pagination/Pagination/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useState } from \"react\";\nimport Button from \"../../common/Button\";\nimport FlexRow from \"../../common/FlexRow\";\nimport PageNumber from \"../PageNumber\";\nimport styles from \"./style.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Pagination = _ref => {\n  _s();\n\n  let {\n    onPageChange,\n    lastPage,\n    initialPageNum\n  } = _ref;\n  const [currentPage, setCurrentPage] = useState(initialPageNum !== null && initialPageNum !== void 0 ? initialPageNum : 1);\n  const onMoveButtonClick = useCallback(numberToAdd => evt => {\n    const newPageNum = currentPage + numberToAdd;\n    console.log(newPageNum);\n\n    if (newPageNum < 1 || newPageNum > lastPage) {\n      return;\n    }\n\n    setCurrentPage(newPageNum);\n    onPageChange(newPageNum);\n  }, [currentPage, lastPage, onPageChange]);\n  return /*#__PURE__*/_jsxDEV(FlexRow, {\n    style: styles[\"pagination--container__wrapper\"],\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: process.env.PUBLIC_URL + \"/icon/ic-arrow-left.svg\",\n      onClick: onMoveButtonClick(-1),\n      style: styles[\"pagination--button\"]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(PageNumber, {\n      centerNumber: currentPage,\n      oddNumberForDisplayCount: 3,\n      lastNumber: lastPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      text: \">\",\n      onClick: onMoveButtonClick(1),\n      style: styles[\"pagination--button\"]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Pagination, \"/g/1+VN1iLviugZVSCspSXjhLdY=\");\n\n_c = Pagination;\nexport default Pagination;\n\nvar _c;\n\n$RefreshReg$(_c, \"Pagination\");","map":{"version":3,"names":["React","useCallback","useState","Button","FlexRow","PageNumber","styles","Pagination","onPageChange","lastPage","initialPageNum","currentPage","setCurrentPage","onMoveButtonClick","numberToAdd","evt","newPageNum","console","log","process","env","PUBLIC_URL"],"sources":["/home/swimmingkiim/Documents/Code-For-Korea/online-memorial/client/src/components/pagination/Pagination/index.tsx"],"sourcesContent":["import React, { useCallback, useState } from \"react\";\nimport Button from \"../../common/Button\";\nimport FlexRow from \"../../common/FlexRow\";\nimport PageNumber from \"../PageNumber\";\nimport styles from \"./style.module.css\";\n\ntype PaginationProps = {\n    onPageChange: (page: number) => void;\n    lastPage: number;\n    initialPageNum?: number;\n}\n\nconst Pagination: React.FC<PaginationProps> = ({ onPageChange, lastPage, initialPageNum }) => {\n\n    const [currentPage, setCurrentPage] = useState<number>(initialPageNum ?? 1);\n\n    const onMoveButtonClick = useCallback((numberToAdd: number) => (evt: React.MouseEvent<HTMLImageElement>) => {\n        const newPageNum = currentPage + numberToAdd;\n        console.log(newPageNum);\n\n        if (newPageNum < 1 || newPageNum > lastPage) {\n            return;\n        }\n        setCurrentPage(newPageNum);\n        onPageChange(newPageNum);\n    }, [currentPage, lastPage, onPageChange]);\n\n    return (\n        <FlexRow style={styles[\"pagination--container__wrapper\"]}>\n            <img src={process.env.PUBLIC_URL + \"/icon/ic-arrow-left.svg\"} onClick={onMoveButtonClick(-1)} style={styles[\"pagination--button\"]} />\n            <PageNumber centerNumber={currentPage} oddNumberForDisplayCount={3} lastNumber={lastPage} />\n            <Button text=\">\" onClick={onMoveButtonClick(1)} style={styles[\"pagination--button\"]} />\n        </FlexRow>\n    )\n};\n\nexport default Pagination;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,QAA7B,QAA6C,OAA7C;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,UAAP,MAAuB,eAAvB;AACA,OAAOC,MAAP,MAAmB,oBAAnB;;;AAQA,MAAMC,UAAqC,GAAG,QAAgD;EAAA;;EAAA,IAA/C;IAAEC,YAAF;IAAgBC,QAAhB;IAA0BC;EAA1B,CAA+C;EAE1F,MAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,CAASQ,cAAT,aAASA,cAAT,cAASA,cAAT,GAA2B,CAA3B,CAA9C;EAEA,MAAMG,iBAAiB,GAAGZ,WAAW,CAAEa,WAAD,IAA0BC,GAAD,IAA6C;IACxG,MAAMC,UAAU,GAAGL,WAAW,GAAGG,WAAjC;IACAG,OAAO,CAACC,GAAR,CAAYF,UAAZ;;IAEA,IAAIA,UAAU,GAAG,CAAb,IAAkBA,UAAU,GAAGP,QAAnC,EAA6C;MACzC;IACH;;IACDG,cAAc,CAACI,UAAD,CAAd;IACAR,YAAY,CAACQ,UAAD,CAAZ;EACH,CAToC,EASlC,CAACL,WAAD,EAAcF,QAAd,EAAwBD,YAAxB,CATkC,CAArC;EAWA,oBACI,QAAC,OAAD;IAAS,KAAK,EAAEF,MAAM,CAAC,gCAAD,CAAtB;IAAA,wBACI;MAAK,GAAG,EAAEa,OAAO,CAACC,GAAR,CAAYC,UAAZ,GAAyB,yBAAnC;MAA8D,OAAO,EAAER,iBAAiB,CAAC,CAAC,CAAF,CAAxF;MAA8F,KAAK,EAAEP,MAAM,CAAC,oBAAD;IAA3G;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI,QAAC,UAAD;MAAY,YAAY,EAAEK,WAA1B;MAAuC,wBAAwB,EAAE,CAAjE;MAAoE,UAAU,EAAEF;IAAhF;MAAA;MAAA;MAAA;IAAA,QAFJ,eAGI,QAAC,MAAD;MAAQ,IAAI,EAAC,GAAb;MAAiB,OAAO,EAAEI,iBAAiB,CAAC,CAAD,CAA3C;MAAgD,KAAK,EAAEP,MAAM,CAAC,oBAAD;IAA7D;MAAA;MAAA;MAAA;IAAA,QAHJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAOH,CAtBD;;GAAMC,U;;KAAAA,U;AAwBN,eAAeA,UAAf"},"metadata":{},"sourceType":"module"}