{"ast":null,"code":"var _jsxFileName = \"/home/swimmingkiim/Documents/Code-For-Korea/online-memorial/client/src/views/MemorialMainContent/MemorialInfomations/MemorialStatistics/Cards/StatisticByTimeCard/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useEffect, useMemo, useState } from \"react\";\nimport { Bar } from \"react-chartjs-2\";\nimport FlexRow from \"../../../../../../components/common/FlexRow\";\nimport BasicCard from \"../BasicCard\";\nimport styles from \"./style.module.css\";\nimport DataService from \"../../../../../../services/data.service\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst StatisticByTimeCard = () => {\n  _s();\n\n  const [statisticByTime, setStatisticByTime] = useState([]);\n  const initializeStatisticByTime = useCallback(async () => {\n    const data = await DataService.getStatistic(new Date(Date.now()).getFullYear());\n\n    if (data !== null) {\n      setStatisticByTime(data);\n    }\n  }, []);\n  const title = \"시간대별 비율 (%)\";\n  const subtitle = \"전체 산업재해 사망사고\";\n  const timeline = Array(24).fill(0).map((_, idx) => {\n    if (idx < 6) return idx + 6;else return idx - 6;\n  });\n  const data = useMemo(() => {\n    const _data = {\n      labels: timeline,\n      datasets: [{\n        label: title,\n        data: statisticByTime,\n        backgroundColor: \"rgba(255, 255, 255, 0.2)\",\n        borderWidth: 0,\n        borderRadius: 5\n      }]\n    };\n    return _data;\n  }, [statisticByTime]);\n  const options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n      legend: {\n        display: false\n      },\n      tooltip: {\n        enabled: true,\n        mode: \"nearest\"\n      }\n    },\n    scales: {\n      x: {\n        display: true,\n        ticks: {\n          maxRotation: 0,\n          minRotation: 0,\n          color: \"#ffffff\",\n          callback: (value, index, _) => {\n            return value === 6 || value === 18 ? `${timeline[index]}` : \"\";\n          }\n        }\n      },\n      y: {\n        display: false\n      }\n    }\n  };\n  useEffect(() => {\n    initializeStatisticByTime();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(BasicCard, {\n    title: title,\n    subtitle: subtitle,\n    children: /*#__PURE__*/_jsxDEV(FlexRow, {\n      style: styles[\"statistic-by-time--container__wrapper\"],\n      children: /*#__PURE__*/_jsxDEV(Bar, {\n        data: data,\n        options: options\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 9\n  }, this);\n};\n\n_s(StatisticByTimeCard, \"+rZSOvu1fA8W5J13pM80/aINqJI=\");\n\n_c = StatisticByTimeCard;\nexport default StatisticByTimeCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"StatisticByTimeCard\");","map":{"version":3,"names":["React","useCallback","useEffect","useMemo","useState","Bar","FlexRow","BasicCard","styles","DataService","StatisticByTimeCard","statisticByTime","setStatisticByTime","initializeStatisticByTime","data","getStatistic","Date","now","getFullYear","title","subtitle","timeline","Array","fill","map","_","idx","_data","labels","datasets","label","backgroundColor","borderWidth","borderRadius","options","responsive","maintainAspectRatio","plugins","legend","display","tooltip","enabled","mode","scales","x","ticks","maxRotation","minRotation","color","callback","value","index","y"],"sources":["/home/swimmingkiim/Documents/Code-For-Korea/online-memorial/client/src/views/MemorialMainContent/MemorialInfomations/MemorialStatistics/Cards/StatisticByTimeCard/index.tsx"],"sourcesContent":["import { ChartData, ChartOptions } from \"chart.js\";\nimport React, {useCallback, useEffect, useMemo, useState} from \"react\";\nimport { Bar } from \"react-chartjs-2\";\nimport FlexRow from \"../../../../../../components/common/FlexRow\";\nimport BasicCard from \"../BasicCard\";\nimport styles from \"./style.module.css\";\nimport DataService from \"../../../../../../services/data.service\";\n\ntype StatisticByTimeCardProps = {}\n\nexport type StatisticDataByTime = number[];\n\nconst StatisticByTimeCard:React.FC<StatisticByTimeCardProps> = () => {\n\n    const [statisticByTime, setStatisticByTime] = useState<StatisticDataByTime>([]);\n\n    const initializeStatisticByTime = useCallback(async () => {\n        const data = await DataService.getStatistic(new Date(Date.now()).getFullYear());\n        if (data !== null) {\n            setStatisticByTime(data);\n        }\n    }, []);\n\n    const title = \"시간대별 비율 (%)\"\n    const subtitle = \"전체 산업재해 사망사고\"\n    const timeline = Array(24).fill(0).map((_, idx) => {\n        if (idx < 6) return idx + 6\n        else return idx - 6\n    })\n    const data = useMemo(() => {\n        const _data: ChartData<\"bar\"> = {\n            labels: timeline,\n            datasets: [\n                {\n                    label: title,\n                    data: statisticByTime,\n                    backgroundColor: \"rgba(255, 255, 255, 0.2)\",\n                    borderWidth: 0,\n                    borderRadius: 5\n                }\n            ]\n        };\n        return _data;\n    }, [statisticByTime]);\n    const options: ChartOptions<\"bar\"> = {\n        responsive: true,\n        maintainAspectRatio: false,\n        plugins: {\n            legend: {\n                display: false\n            },\n            tooltip: {\n                enabled: true,\n                mode: \"nearest\"\n            }\n        },\n        scales: {\n            x: {\n                display: true,\n                ticks: {\n                    maxRotation: 0,\n                    minRotation: 0,\n                    color: \"#ffffff\",\n                    callback: (value, index, _) => {\n                        return value === 6 || value === 18 ? `${timeline[index]}` : \"\"\n                    }\n                }\n            },\n            y: {\n                display: false,\n            }\n        }\n    }\n\n    useEffect(() => {\n        initializeStatisticByTime();\n    }, [])\n\n    return (\n        <BasicCard title={title} subtitle={subtitle}>\n            <FlexRow style={styles[\"statistic-by-time--container__wrapper\"]}>\n                <Bar data={data} options={options} />\n            </FlexRow>\n        </BasicCard>\n    )\n};\n\nexport default StatisticByTimeCard;"],"mappings":"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"},"metadata":{},"sourceType":"module"}