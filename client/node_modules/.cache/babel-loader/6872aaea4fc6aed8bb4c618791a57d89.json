{"ast":null,"code":"var _jsxFileName = \"/home/swimmingkiim/Documents/Code-For-Korea/online-memorial/client/src/views/MemorialAnimation/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useState } from \"react\";\nimport MemorialTable from \"../../components/animation/MemorialTable\";\nimport Button from \"../../components/common/Button\";\nimport FlexColumn from \"../../components/common/FlexColumn\";\nimport TextChunk from \"../../components/common/TextChunk\";\nimport PostService from \"../../services/post.service\";\nimport AddPostModal from \"./AddPostModal\";\nimport styles from \"./style.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MemorialAnimation = _ref => {\n  _s();\n\n  let {\n    count,\n    year = new Date(Date.now()).getFullYear()\n  } = _ref;\n  const [showAddPostModal, setShowAddPostModal] = useState(false);\n  const memorialTextContent = `${year}년, 산업 재해로 인해\\n사망한 분들의 숫자입니다`;\n  const addPostButtonText = \"추모글 남기기\";\n\n  const onClickAddPost = _ => {\n    setShowAddPostModal(true);\n  };\n\n  const onCloseModal = useCallback(() => {\n    setShowAddPostModal(false);\n  }, []);\n  const onSubmitPost = useCallback(async text => {\n    const result = await PostService.createPost({\n      name: \"test\",\n      body: text\n    });\n    console.log(result);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(FlexColumn, {\n    style: styles[\"memorial-animation--wrapper\"],\n    children: [/*#__PURE__*/_jsxDEV(MemorialTable, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FlexColumn, {\n      style: styles[\"memorial-animation--subcontent-wrapper\"],\n      children: [/*#__PURE__*/_jsxDEV(TextChunk, {\n        style: styles[\"memorial-animation--count\"],\n        content: `${count}`,\n        isParagraph: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextChunk, {\n        style: styles[\"memorial-animation--text\"],\n        content: memorialTextContent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        text: addPostButtonText,\n        onClick: onClickAddPost,\n        style: styles[\"memorial-animation--button\"]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), showAddPostModal && /*#__PURE__*/_jsxDEV(AddPostModal, {\n      onSubmitPost: onSubmitPost,\n      onCloseModal: onCloseModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MemorialAnimation, \"W8kpH5M2PPcx5+8zLU2hK8REOcE=\");\n\n_c = MemorialAnimation;\nexport default MemorialAnimation;\n\nvar _c;\n\n$RefreshReg$(_c, \"MemorialAnimation\");","map":{"version":3,"names":["React","useCallback","useState","MemorialTable","Button","FlexColumn","TextChunk","PostService","AddPostModal","styles","MemorialAnimation","count","year","Date","now","getFullYear","showAddPostModal","setShowAddPostModal","memorialTextContent","addPostButtonText","onClickAddPost","_","onCloseModal","onSubmitPost","text","result","createPost","name","body","console","log"],"sources":["/home/swimmingkiim/Documents/Code-For-Korea/online-memorial/client/src/views/MemorialAnimation/index.tsx"],"sourcesContent":["import React, { useCallback, useState } from \"react\";\nimport MemorialTable from \"../../components/animation/MemorialTable\";\nimport Button from \"../../components/common/Button\";\nimport FlexColumn from \"../../components/common/FlexColumn\";\nimport TextChunk from \"../../components/common/TextChunk\";\nimport PostService from \"../../services/post.service\";\nimport AddPostModal from \"./AddPostModal\";\nimport styles from \"./style.module.css\";\n\nexport type MemorialAnimationProps = {\n    count: number;\n    year?: number;\n}\n\nconst MemorialAnimation: React.FC<MemorialAnimationProps> = ({ count, year = new Date(Date.now()).getFullYear() }) => {\n\n    const [showAddPostModal, setShowAddPostModal] = useState(false);\n    const memorialTextContent = `${year}년, 산업 재해로 인해\\n사망한 분들의 숫자입니다`;\n    const addPostButtonText = \"추모글 남기기\";\n\n    const onClickAddPost = (_: React.MouseEvent<HTMLButtonElement>) => {\n        setShowAddPostModal(true);\n    }\n\n    const onCloseModal = useCallback(() => {\n        setShowAddPostModal(false);\n    }, [])\n\n    const onSubmitPost = useCallback(async (text: string) => {\n        const result = await PostService.createPost({\n            name: \"test\",\n            body: text,\n        });\n        console.log(result);\n    }, [])\n\n    return (\n        <FlexColumn style={styles[\"memorial-animation--wrapper\"]}>\n            <MemorialTable />\n            <FlexColumn style={styles[\"memorial-animation--subcontent-wrapper\"]}>\n                <TextChunk style={styles[\"memorial-animation--count\"]} content={`${count}`} isParagraph={true} />\n                <TextChunk style={styles[\"memorial-animation--text\"]} content={memorialTextContent} />\n                <Button text={addPostButtonText} onClick={onClickAddPost} style={styles[\"memorial-animation--button\"]} />\n            </FlexColumn>\n            {\n                showAddPostModal && (\n                    <AddPostModal onSubmitPost={onSubmitPost} onCloseModal={onCloseModal} />\n                )\n            }\n        </FlexColumn>\n    )\n};\n\nexport default MemorialAnimation;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,QAA7B,QAA6C,OAA7C;AACA,OAAOC,aAAP,MAA0B,0CAA1B;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,OAAOC,UAAP,MAAuB,oCAAvB;AACA,OAAOC,SAAP,MAAsB,mCAAtB;AACA,OAAOC,WAAP,MAAwB,6BAAxB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,MAAP,MAAmB,oBAAnB;;;AAOA,MAAMC,iBAAmD,GAAG,QAA0D;EAAA;;EAAA,IAAzD;IAAEC,KAAF;IAASC,IAAI,GAAG,IAAIC,IAAJ,CAASA,IAAI,CAACC,GAAL,EAAT,EAAqBC,WAArB;EAAhB,CAAyD;EAElH,MAAM,CAACC,gBAAD,EAAmBC,mBAAnB,IAA0Cf,QAAQ,CAAC,KAAD,CAAxD;EACA,MAAMgB,mBAAmB,GAAI,GAAEN,IAAK,6BAApC;EACA,MAAMO,iBAAiB,GAAG,SAA1B;;EAEA,MAAMC,cAAc,GAAIC,CAAD,IAA4C;IAC/DJ,mBAAmB,CAAC,IAAD,CAAnB;EACH,CAFD;;EAIA,MAAMK,YAAY,GAAGrB,WAAW,CAAC,MAAM;IACnCgB,mBAAmB,CAAC,KAAD,CAAnB;EACH,CAF+B,EAE7B,EAF6B,CAAhC;EAIA,MAAMM,YAAY,GAAGtB,WAAW,CAAC,MAAOuB,IAAP,IAAwB;IACrD,MAAMC,MAAM,GAAG,MAAMlB,WAAW,CAACmB,UAAZ,CAAuB;MACxCC,IAAI,EAAE,MADkC;MAExCC,IAAI,EAAEJ;IAFkC,CAAvB,CAArB;IAIAK,OAAO,CAACC,GAAR,CAAYL,MAAZ;EACH,CAN+B,EAM7B,EAN6B,CAAhC;EAQA,oBACI,QAAC,UAAD;IAAY,KAAK,EAAEhB,MAAM,CAAC,6BAAD,CAAzB;IAAA,wBACI,QAAC,aAAD;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI,QAAC,UAAD;MAAY,KAAK,EAAEA,MAAM,CAAC,wCAAD,CAAzB;MAAA,wBACI,QAAC,SAAD;QAAW,KAAK,EAAEA,MAAM,CAAC,2BAAD,CAAxB;QAAuD,OAAO,EAAG,GAAEE,KAAM,EAAzE;QAA4E,WAAW,EAAE;MAAzF;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI,QAAC,SAAD;QAAW,KAAK,EAAEF,MAAM,CAAC,0BAAD,CAAxB;QAAsD,OAAO,EAAES;MAA/D;QAAA;QAAA;QAAA;MAAA,QAFJ,eAGI,QAAC,MAAD;QAAQ,IAAI,EAAEC,iBAAd;QAAiC,OAAO,EAAEC,cAA1C;QAA0D,KAAK,EAAEX,MAAM,CAAC,4BAAD;MAAvE;QAAA;QAAA;QAAA;MAAA,QAHJ;IAAA;MAAA;MAAA;MAAA;IAAA,QAFJ,EAQQO,gBAAgB,iBACZ,QAAC,YAAD;MAAc,YAAY,EAAEO,YAA5B;MAA0C,YAAY,EAAED;IAAxD;MAAA;MAAA;MAAA;IAAA,QATZ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAeH,CArCD;;GAAMZ,iB;;KAAAA,iB;AAuCN,eAAeA,iBAAf"},"metadata":{},"sourceType":"module"}