{"ast":null,"code":"var _jsxFileName = \"/home/swimmingkiim/Documents/Code-For-Korea/online-memorial/client/src/views/MemorialMainContent/MemorialInfomations/MemorialStatistics/Cards/StatisticByTimeCard/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useEffect, useMemo, useState } from \"react\";\nimport { Bar } from \"react-chartjs-2\";\nimport FlexRow from \"../../../../../../components/common/FlexRow\";\nimport BasicCard from \"../BasicCard\";\nimport styles from \"./style.module.css\";\nimport DataService from \"../../../../../../services/data.service\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst StatisticByTimeCard = () => {\n  _s();\n\n  const [statisticByTime, setStatisticByTime] = useState([]);\n  const initializeStatisticByTime = useCallback(async () => {\n    const data = await DataService.getStatistic(new Date(Date.now()).getFullYear());\n\n    if (data !== null) {\n      setStatisticByTime(data);\n    }\n  }, []);\n  const title = \"시간대별 비율 (%)\";\n  const subtitle = \"전체 산업재해 사망사고\";\n  const timeline = Array(24).fill(0).map((_, idx) => {\n    if (idx < 6) return idx + 6;else return idx - 6;\n  });\n  const data = useMemo(() => {\n    const _data = {\n      labels: timeline,\n      datasets: [{\n        label: title,\n        data: statisticByTime,\n        backgroundColor: \"rgba(255, 255, 255, 0.2)\",\n        borderWidth: 0,\n        borderRadius: 5\n      }]\n    };\n    return _data;\n  }, [statisticByTime]);\n  const options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n      legend: {\n        display: false\n      },\n      tooltip: {\n        enabled: true,\n        mode: \"nearest\"\n      }\n    },\n    scales: {\n      x: {\n        display: true,\n        ticks: {\n          maxRotation: 0,\n          minRotation: 0,\n          color: \"#ffffff\",\n          callback: (value, index, _) => {\n            return value === 6 || value === 18 ? `${timeline[index]}` : \"\";\n          }\n        }\n      },\n      y: {\n        display: false\n      }\n    }\n  };\n  useEffect(() => {\n    initializeStatisticByTime();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(BasicCard, {\n    title: title,\n    subtitle: subtitle,\n    children: /*#__PURE__*/_jsxDEV(FlexRow, {\n      style: styles[\"statistic-by-time--container__wrapper\"],\n      children: /*#__PURE__*/_jsxDEV(Bar, {\n        data: data,\n        options: options\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n\n_s(StatisticByTimeCard, \"+rZSOvu1fA8W5J13pM80/aINqJI=\");\n\n_c = StatisticByTimeCard;\nexport default StatisticByTimeCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"StatisticByTimeCard\");","map":{"version":3,"names":["React","useCallback","useEffect","useMemo","useState","Bar","FlexRow","BasicCard","styles","DataService","StatisticByTimeCard","statisticByTime","setStatisticByTime","initializeStatisticByTime","data","getStatistic","Date","now","getFullYear","title","subtitle","timeline","Array","fill","map","_","idx","_data","labels","datasets","label","backgroundColor","borderWidth","borderRadius","options","responsive","maintainAspectRatio","plugins","legend","display","tooltip","enabled","mode","scales","x","ticks","maxRotation","minRotation","color","callback","value","index","y"],"sources":["/home/swimmingkiim/Documents/Code-For-Korea/online-memorial/client/src/views/MemorialMainContent/MemorialInfomations/MemorialStatistics/Cards/StatisticByTimeCard/index.tsx"],"sourcesContent":["import { ChartData, ChartOptions } from \"chart.js\";\nimport React, { useCallback, useEffect, useMemo, useState } from \"react\";\nimport { Bar } from \"react-chartjs-2\";\nimport FlexRow from \"../../../../../../components/common/FlexRow\";\nimport BasicCard from \"../BasicCard\";\nimport styles from \"./style.module.css\";\nimport DataService from \"../../../../../../services/data.service\";\n\ntype StatisticByTimeCardProps = {};\n\nexport type StatisticDataByTime = number[];\n\nconst StatisticByTimeCard: React.FC<StatisticByTimeCardProps> = () => {\n  const [statisticByTime, setStatisticByTime] = useState<StatisticDataByTime>(\n    []\n  );\n\n  const initializeStatisticByTime = useCallback(async () => {\n    const data = await DataService.getStatistic(\n      new Date(Date.now()).getFullYear()\n    );\n    if (data !== null) {\n      setStatisticByTime(data);\n    }\n  }, []);\n\n  const title = \"시간대별 비율 (%)\";\n  const subtitle = \"전체 산업재해 사망사고\";\n  const timeline = Array(24)\n    .fill(0)\n    .map((_, idx) => {\n      if (idx < 6) return idx + 6;\n      else return idx - 6;\n    });\n  const data = useMemo(() => {\n    const _data: ChartData<\"bar\"> = {\n      labels: timeline,\n      datasets: [\n        {\n          label: title,\n          data: statisticByTime,\n          backgroundColor: \"rgba(255, 255, 255, 0.2)\",\n          borderWidth: 0,\n          borderRadius: 5,\n        },\n      ],\n    };\n    return _data;\n  }, [statisticByTime]);\n  const options: ChartOptions<\"bar\"> = {\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n      legend: {\n        display: false,\n      },\n      tooltip: {\n        enabled: true,\n        mode: \"nearest\",\n      },\n    },\n    scales: {\n      x: {\n        display: true,\n        ticks: {\n          maxRotation: 0,\n          minRotation: 0,\n          color: \"#ffffff\",\n          callback: (value, index, _) => {\n            return value === 6 || value === 18 ? `${timeline[index]}` : \"\";\n          },\n        },\n      },\n      y: {\n        display: false,\n      },\n    },\n  };\n\n  useEffect(() => {\n    initializeStatisticByTime();\n  }, []);\n\n  return (\n    <BasicCard title={title} subtitle={subtitle}>\n      <FlexRow style={styles[\"statistic-by-time--container__wrapper\"]}>\n        <Bar data={data} options={options} />\n      </FlexRow>\n    </BasicCard>\n  );\n};\n\nexport default StatisticByTimeCard;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}