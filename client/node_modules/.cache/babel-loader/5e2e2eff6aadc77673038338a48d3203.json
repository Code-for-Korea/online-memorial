{"ast":null,"code":"import React,{useCallback}from\"react\";import FlexRow from\"../../common/FlexRow\";import TextChunk from\"../../common/TextChunk\";import styles from\"./style.module.css\";import{jsx as _jsx}from\"react/jsx-runtime\";var PageNumber=function PageNumber(_ref){var centerNumber=_ref.centerNumber,oddNumberForDisplayCount=_ref.oddNumberForDisplayCount,lastNumber=_ref.lastNumber;// start 이상, end 미만의 숫자 array를 반환한다.\nvar getNumArrayOfRange=useCallback(function(start,end){var step=arguments.length>2&&arguments[2]!==undefined?arguments[2]:1;return Array.from({length:end-start},function(_,idx){return start+idx*step;});},[]);// 현재 페이지 넘버가 가운데 있다고 했을 때, 왼쪽과 오른쪽에 몇 개가 표시되야 하는지 정의한다.\nvar gap=Math.floor(oddNumberForDisplayCount/2);var start=centerNumber-gap;var end=centerNumber+gap+1;// end 미만이므로 1 추가\n// 현재 페이지가 1과 gap 사이에 있을 때,\n// 즉, 현재 페이지 넘버의 왼쪽에 표시할 숫자가 gap보다 모자랄 때\nif(centerNumber<=gap){start=1;end=oddNumberForDisplayCount+1;}// 현재 페이지가 마지막 페이지에 가까워서\n// 현재 페이지 넘버 오른쪽에 표시할 숫자가 gap보다 모자랄 때\nif(gap>lastNumber-centerNumber){start=lastNumber-gap*2;end=lastNumber+1;}var numbersToDisplay=getNumArrayOfRange(start,end).filter(function(num){return num>=1&&num<=lastNumber;})// 처음과 끝이 범위 안에 있게 하여 예외 처리\n.sort(function(a,b){return a-b;});return/*#__PURE__*/_jsx(FlexRow,{style:styles[\"pagination-page-number__wrapper\"],children:numbersToDisplay.map(function(num,idx){return/*#__PURE__*/_jsx(TextChunk,{content:num!==0?String(num):\" \",style:\"\".concat(styles[\"pagination--page-number__default\"],\" \").concat(num===centerNumber?styles[\"pagination--page-number__selected\"]:\"\")},\"page-num-\".concat(num,\"-\").concat(idx));})});};export default PageNumber;","map":null,"metadata":{},"sourceType":"module"}