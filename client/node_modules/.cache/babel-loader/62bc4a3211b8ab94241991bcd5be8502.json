{"ast":null,"code":"var _jsxFileName = \"/home/swimmingkiim/Documents/Code-For-Korea/online-memorial/client/src/components/pagination/PageNumber/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback } from \"react\";\nimport FlexRow from \"../../common/FlexRow\";\nimport TextChunk from \"../../common/TextChunk\";\nimport styles from \"./style.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PageNumber = _ref => {\n  _s();\n\n  let {\n    centerNumber,\n    oddNumberForDisplayCount,\n    lastNumber\n  } = _ref;\n  // start 이상, end 미만의 숫자 array를 반환한다.\n  const getNumArrayOfRange = useCallback(function (start, end) {\n    let step = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n    return Array.from({\n      length: end - start\n    }, (_, idx) => start + idx * step);\n  }, []); // 현재 페이지 넘버가 가운데 있다고 했을 때, 왼쪽과 오른쪽에 몇 개가 표시되야 하는지 정의한다.\n\n  const gap = Math.floor(oddNumberForDisplayCount / 2);\n  let start = centerNumber - gap;\n  let end = centerNumber + gap + 1; // end 미만이므로 1 추가\n  // 현재 페이지가 1과 gap 사이에 있을 때,\n  // 즉, 현재 페이지 넘버의 왼쪽에 표시할 숫자가 gap보다 모자랄 때\n\n  if (centerNumber <= gap) {\n    start = 1;\n    end = oddNumberForDisplayCount + 1;\n  } // 현재 페이지가 마지막 페이지에 가까워서\n  // 현재 페이지 넘버 오른쪽에 표시할 숫자가 gap보다 모자랄 때\n\n\n  if (gap > lastNumber - centerNumber) {\n    start = lastNumber - gap * 2;\n    end = lastNumber + 1;\n  }\n\n  const numbersToDisplay = getNumArrayOfRange(start, end).filter(num => num >= 1 && num <= lastNumber) // 처음과 끝이 범위 안에 있게 하여 예외 처리\n  .sort((a, b) => a - b);\n  return /*#__PURE__*/_jsxDEV(FlexRow, {\n    style: styles[\"pagination-page-number__wrapper\"],\n    children: numbersToDisplay.map((num, idx) => {\n      return /*#__PURE__*/_jsxDEV(TextChunk, {\n        content: num !== 0 ? String(num) : \" \",\n        style: `${styles[\"pagination--page-number__default\"]} ${num === centerNumber ? styles[\"pagination--page-number__selected\"] : \"\"}`\n      }, `page-num-${num}-${idx}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 28\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PageNumber, \"pziuTwWADiDHaqDCn1u2gWHLW0E=\");\n\n_c = PageNumber;\nexport default PageNumber;\n\nvar _c;\n\n$RefreshReg$(_c, \"PageNumber\");","map":{"version":3,"names":["React","useCallback","FlexRow","TextChunk","styles","PageNumber","centerNumber","oddNumberForDisplayCount","lastNumber","getNumArrayOfRange","start","end","step","Array","from","length","_","idx","gap","Math","floor","numbersToDisplay","filter","num","sort","a","b","map","String"],"sources":["/home/swimmingkiim/Documents/Code-For-Korea/online-memorial/client/src/components/pagination/PageNumber/index.tsx"],"sourcesContent":["import React, { useCallback } from \"react\";\nimport FlexRow from \"../../common/FlexRow\";\nimport TextChunk from \"../../common/TextChunk\";\nimport styles from \"./style.module.css\";\n\ntype PageNumberProps = {\n    centerNumber: number;  // 현재 페이지 넘버로, focus가 되어야 한다. \n    oddNumberForDisplayCount: number; // 현재 페이지 한개를 포함한, 화면상에 표시되는 페이지 숫자의 갯수. 홀수여야 한다.\n    lastNumber: number; // 마지막 페이지 넘버\n}\n\nconst PageNumber:React.FC<PageNumberProps> = ({ centerNumber, oddNumberForDisplayCount, lastNumber }) => {\n\n    // start 이상, end 미만의 숫자 array를 반환한다.\n    const getNumArrayOfRange = useCallback((start:number, end: number, step: number = 1) => {\n        return Array.from({ length: (end - start) }, (_, idx) => start + (idx * step));\n    }, []);\n\n    // 현재 페이지 넘버가 가운데 있다고 했을 때, 왼쪽과 오른쪽에 몇 개가 표시되야 하는지 정의한다.\n    const gap = Math.floor(oddNumberForDisplayCount / 2);\n\n    let start = centerNumber - gap;\n    let end = centerNumber + gap + 1; // end 미만이므로 1 추가\n\n    // 현재 페이지가 1과 gap 사이에 있을 때,\n    // 즉, 현재 페이지 넘버의 왼쪽에 표시할 숫자가 gap보다 모자랄 때\n    if (centerNumber <= gap) {\n        start = 1;\n        end = oddNumberForDisplayCount + 1;\n    }\n\n    // 현재 페이지가 마지막 페이지에 가까워서\n    // 현재 페이지 넘버 오른쪽에 표시할 숫자가 gap보다 모자랄 때\n    if (gap > lastNumber - centerNumber) {\n        start = lastNumber - gap * 2;\n        end = lastNumber + 1\n    }\n\n    const numbersToDisplay = getNumArrayOfRange(start, end)\n                                .filter((num) => num >= 1 && num <= lastNumber) // 처음과 끝이 범위 안에 있게 하여 예외 처리\n                                .sort((a, b) => a - b);\n\n    return (\n        <FlexRow style={styles[\"pagination-page-number__wrapper\"]}>\n            {\n                numbersToDisplay.map((num, idx) => {\n                    return <TextChunk \n                                key={`page-num-${num}-${idx}`}\n                                content={num !== 0 ? String(num) : \" \"} \n                                style={`${styles[\"pagination--page-number__default\"]} ${num === centerNumber ? styles[\"pagination--page-number__selected\"] : \"\"}`}\n                            />\n                })\n            }\n        </FlexRow>\n    )\n};\n\nexport default PageNumber;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,MAAP,MAAmB,oBAAnB;;;AAQA,MAAMC,UAAoC,GAAG,QAA4D;EAAA;;EAAA,IAA3D;IAAEC,YAAF;IAAgBC,wBAAhB;IAA0CC;EAA1C,CAA2D;EAErG;EACA,MAAMC,kBAAkB,GAAGR,WAAW,CAAC,UAACS,KAAD,EAAeC,GAAf,EAAiD;IAAA,IAArBC,IAAqB,uEAAN,CAAM;IACpF,OAAOC,KAAK,CAACC,IAAN,CAAW;MAAEC,MAAM,EAAGJ,GAAG,GAAGD;IAAjB,CAAX,EAAsC,CAACM,CAAD,EAAIC,GAAJ,KAAYP,KAAK,GAAIO,GAAG,GAAGL,IAAjE,CAAP;EACH,CAFqC,EAEnC,EAFmC,CAAtC,CAHqG,CAOrG;;EACA,MAAMM,GAAG,GAAGC,IAAI,CAACC,KAAL,CAAWb,wBAAwB,GAAG,CAAtC,CAAZ;EAEA,IAAIG,KAAK,GAAGJ,YAAY,GAAGY,GAA3B;EACA,IAAIP,GAAG,GAAGL,YAAY,GAAGY,GAAf,GAAqB,CAA/B,CAXqG,CAWnE;EAElC;EACA;;EACA,IAAIZ,YAAY,IAAIY,GAApB,EAAyB;IACrBR,KAAK,GAAG,CAAR;IACAC,GAAG,GAAGJ,wBAAwB,GAAG,CAAjC;EACH,CAlBoG,CAoBrG;EACA;;;EACA,IAAIW,GAAG,GAAGV,UAAU,GAAGF,YAAvB,EAAqC;IACjCI,KAAK,GAAGF,UAAU,GAAGU,GAAG,GAAG,CAA3B;IACAP,GAAG,GAAGH,UAAU,GAAG,CAAnB;EACH;;EAED,MAAMa,gBAAgB,GAAGZ,kBAAkB,CAACC,KAAD,EAAQC,GAAR,CAAlB,CACIW,MADJ,CACYC,GAAD,IAASA,GAAG,IAAI,CAAP,IAAYA,GAAG,IAAIf,UADvC,EACmD;EADnD,CAEIgB,IAFJ,CAES,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,GAAGC,CAFvB,CAAzB;EAIA,oBACI,QAAC,OAAD;IAAS,KAAK,EAAEtB,MAAM,CAAC,iCAAD,CAAtB;IAAA,UAEQiB,gBAAgB,CAACM,GAAjB,CAAqB,CAACJ,GAAD,EAAMN,GAAN,KAAc;MAC/B,oBAAO,QAAC,SAAD;QAEK,OAAO,EAAEM,GAAG,KAAK,CAAR,GAAYK,MAAM,CAACL,GAAD,CAAlB,GAA0B,GAFxC;QAGK,KAAK,EAAG,GAAEnB,MAAM,CAAC,kCAAD,CAAqC,IAAGmB,GAAG,KAAKjB,YAAR,GAAuBF,MAAM,CAAC,mCAAD,CAA7B,GAAqE,EAAG;MAHrI,GACW,YAAWmB,GAAI,IAAGN,GAAI,EADjC;QAAA;QAAA;QAAA;MAAA,QAAP;IAKH,CAND;EAFR;IAAA;IAAA;IAAA;EAAA,QADJ;AAaH,CA5CD;;GAAMZ,U;;KAAAA,U;AA8CN,eAAeA,UAAf"},"metadata":{},"sourceType":"module"}