{"ast":null,"code":"var _jsxFileName = \"/home/swimmingkiim/Documents/Code-For-Korea/online-memorial/client/src/views/MemorialMainContent/MemorialInfomations/MemorialDataTable/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useEffect, useMemo, useState } from \"react\";\nimport DataTableRow from \"../../../../components/dataTable/DataTableRow\";\nimport styles from \"./style.module.css\";\nimport FlexColumn from \"../../../../components/common/FlexColumn\";\nimport Pagination from \"../../../../components/pagination/Pagination\";\nimport Container from \"../../../../components/common/Container\";\nimport DataService from \"../../../../services/data.service\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MemorialDataTable = () => {\n  _s();\n\n  const [postPageNum, setPostPageNum] = useState(1);\n  const [dataTableList, setDataTableList] = useState([]);\n  const initializeDataTableList = useCallback(async () => {\n    const data = await DataService.getDataTable(postPageNum);\n\n    if (data !== null) {\n      setDataTableList(data[\"disasters\"].map(accident => ({\n        date: new Date(Date.parse(accident[\"happened_on\"].toString())),\n        deathCount: accident[\"death\"],\n        injuredCount: accident[\"injury\"],\n        district: accident[\"area\"],\n        accidentType: accident[\"category\"],\n        articleUrl: accident[\"url\"]\n      })));\n    }\n  }, [postPageNum]);\n  useEffect(() => {\n    initializeDataTableList();\n  }, []);\n  const headerList = [\"사고날짜/요일\", \"사망\", \"부상\", \"도시(행정구역)\", \"사고유형\", \"세부내용\"];\n  const dataPerPage = 10;\n  const updatePostPageNum = useCallback(newPageNum => {\n    setPostPageNum(newPageNum);\n  }, []);\n  const getLastPostPageNum = useCallback(() => {\n    return Math.floor(dataTableList.length / dataPerPage) + 1;\n  }, [dataTableList, dataPerPage]);\n  const currentDatas = useMemo(() => {\n    return dataTableList.slice((postPageNum - 1) * dataPerPage, postPageNum * dataPerPage);\n  }, [postPageNum, dataPerPage, dataTableList]);\n  return /*#__PURE__*/_jsxDEV(FlexColumn, {\n    children: [/*#__PURE__*/_jsxDEV(\"table\", {\n      className: styles[\"memorial-data-table\"],\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        className: styles[\"memorial-data-table--header\"],\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: styles[\"memorial-data-table--header-row\"],\n          children: headerList.map(text => /*#__PURE__*/_jsxDEV(\"th\", {\n            className: styles[\"memorial-data-table--header-cell\"],\n            children: text\n          }, `memorial-data-table-header-${text}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: currentDatas.map((data, idx) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: Object.keys(data).map(key => /*#__PURE__*/_jsxDEV(DataTableRow, {\n            content: key === \"articleUrl\" ? /*#__PURE__*/_jsxDEV(\"a\", {\n              className: styles[\"memorial-data-table--body-link\"],\n              rel: \"noreferrer\",\n              target: \"_blank\",\n              href: data[key],\n              children: \"GO\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 45\n            }, this) : `${data[key]}`\n          }, `memorial-data-table-r${idx}c${key}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 33\n          }, this))\n        }, `memorial-data-table-r${idx}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      style: styles[\"memorial-data-table--pagination__wrapper\"],\n      children: /*#__PURE__*/_jsxDEV(Pagination, {\n        onPageChange: updatePostPageNum,\n        lastPage: getLastPostPageNum(),\n        initialPageNum: postPageNum\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MemorialDataTable, \"dxckd90CxfjCsGnSb22/0qL3Joc=\");\n\n_c = MemorialDataTable;\nexport default MemorialDataTable;\nexport const WEEKDAY = [\"일\", \"월\", \"화\", \"수\", \"목\", \"금\", \"토\"];\nexport const dateFormatOption = {\n  year: \"numeric\",\n  month: \"numeric\",\n  day: \"numeric\"\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"MemorialDataTable\");","map":{"version":3,"names":["React","useCallback","useEffect","useMemo","useState","DataTableRow","styles","FlexColumn","Pagination","Container","DataService","MemorialDataTable","postPageNum","setPostPageNum","dataTableList","setDataTableList","initializeDataTableList","data","getDataTable","map","accident","date","Date","parse","toString","deathCount","injuredCount","district","accidentType","articleUrl","headerList","dataPerPage","updatePostPageNum","newPageNum","getLastPostPageNum","Math","floor","length","currentDatas","slice","text","idx","Object","keys","key","WEEKDAY","dateFormatOption","year","month","day"],"sources":["/home/swimmingkiim/Documents/Code-For-Korea/online-memorial/client/src/views/MemorialMainContent/MemorialInfomations/MemorialDataTable/index.tsx"],"sourcesContent":["import React, { useCallback, useEffect, useMemo, useState } from \"react\";\nimport DataTableRow from \"../../../../components/dataTable/DataTableRow\";\nimport styles from \"./style.module.css\";\nimport FlexColumn from \"../../../../components/common/FlexColumn\";\nimport Pagination from \"../../../../components/pagination/Pagination\";\nimport Container from \"../../../../components/common/Container\";\nimport DataService from \"../../../../services/data.service\";\n\ntype MemorialDataTableProps = {};\n\nexport type DataTableItem = {\n    date: string;\n    deathCount: number;\n    injuredCount: number;\n    district: string;\n    accidentType: string;\n    articleUrl: string;\n};\n\nexport type DataTableList = DataTableItem[];\n\nconst MemorialDataTable: React.FC<MemorialDataTableProps> = () => {\n    const [postPageNum, setPostPageNum] = useState<number>(1);\n    const [dataTableList, setDataTableList] = useState<DataTableList>([]);\n\n    const initializeDataTableList = useCallback(async () => {\n        const data = await DataService.getDataTable(postPageNum);\n        if (data !== null) {\n            setDataTableList(data[\"disasters\"].map((accident: { [key: string]: any }) => ({\n                date: new Date(Date.parse(accident[\"happened_on\"].toString())),\n                deathCount: accident[\"death\"],\n                injuredCount: accident[\"injury\"],\n                district: accident[\"area\"],\n                accidentType: accident[\"category\"],\n                articleUrl: accident[\"url\"],\n            })));\n        }\n    }, [postPageNum]);\n\n    useEffect(() => {\n        initializeDataTableList();\n    }, []);\n\n    const headerList = [\n        \"사고날짜/요일\",\n        \"사망\",\n        \"부상\",\n        \"도시(행정구역)\",\n        \"사고유형\",\n        \"세부내용\",\n    ];\n\n    const dataPerPage = 10;\n    const updatePostPageNum = useCallback((newPageNum: number) => {\n        setPostPageNum(newPageNum);\n    }, []);\n\n    const getLastPostPageNum = useCallback(() => {\n        return Math.floor(dataTableList.length / dataPerPage) + 1;\n    }, [dataTableList, dataPerPage]);\n\n    const currentDatas = useMemo(() => {\n        return dataTableList.slice(\n            (postPageNum - 1) * dataPerPage,\n            postPageNum * dataPerPage\n        );\n    }, [postPageNum, dataPerPage, dataTableList]);\n\n    return (\n        <FlexColumn>\n            <table className={styles[\"memorial-data-table\"]}>\n                <thead className={styles[\"memorial-data-table--header\"]}>\n                    <tr className={styles[\"memorial-data-table--header-row\"]}>\n                        {headerList.map((text) => (\n                            <th\n                                className={styles[\"memorial-data-table--header-cell\"]}\n                                key={`memorial-data-table-header-${text}`}\n                            >\n                                {text}\n                            </th>\n                        ))}\n                    </tr>\n                </thead>\n                <tbody>\n                    {currentDatas.map((data, idx) => (\n                        <tr key={`memorial-data-table-r${idx}`}>\n                            {Object.keys(data).map((key) => (\n                                <DataTableRow\n                                    key={`memorial-data-table-r${idx}c${key}`}\n                                    content={\n                                        key === \"articleUrl\" ? (\n                                            <a\n                                                className={styles[\"memorial-data-table--body-link\"]}\n                                                rel=\"noreferrer\"\n                                                target=\"_blank\"\n                                                href={data[key] as string}\n                                            >\n                                                GO\n                                            </a>\n                                        ) : `${data[key as keyof DataTableItem]}`}\n                                />\n                            ))}\n                        </tr>\n                    ))}\n                </tbody>\n            </table>\n            <Container style={styles[\"memorial-data-table--pagination__wrapper\"]}>\n                <Pagination\n                    onPageChange={updatePostPageNum}\n                    lastPage={getLastPostPageNum()}\n                    initialPageNum={postPageNum}\n                />\n            </Container>\n        </FlexColumn>\n    );\n};\n\nexport default MemorialDataTable;\n\nexport const WEEKDAY = [\"일\", \"월\", \"화\", \"수\", \"목\", \"금\", \"토\"];\n\nexport const dateFormatOption = {\n    year: \"numeric\",\n    month: \"numeric\",\n    day: \"numeric\",\n} as Intl.DateTimeFormatOptions;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}